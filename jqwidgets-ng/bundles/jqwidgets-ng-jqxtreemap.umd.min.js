require('../../jqwidgets/jqxcore');
require('../../jqwidgets/jqxdata');
require('../../jqwidgets/jqxtreemap');
require('../../jqwidgets/jqxtooltip');
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("jqwidgets-ng/jqxtreemap",["exports","@angular/core"],t):t((e["jqwidgets-ng"]=e["jqwidgets-ng"]||{},e["jqwidgets-ng"].jqxtreemap={}),e.ng.core)}(this,function(e,t){"use strict";function s(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var o,n,s=r.call(e),i=[];try{for(;(void 0===t||0<t--)&&!(o=s.next()).done;)i.push(o.value)}catch(a){n={error:a}}finally{try{o&&!o.done&&(r=s["return"])&&r.call(s)}finally{if(n)throw n.error}}return i}var r=function(){function e(e){this.autoCreate=!0,this.properties=["baseColor","colorRanges","colorRange","colorMode","displayMember","height","hoverEnabled","headerHeight","legendLabel","legendPosition","legendScaleCallback","renderCallbacks","selectionEnabled","showLegend","source","theme","valueMember","width"],this.onBindingComplete=new t.EventEmitter,this.elementRef=e}return e.prototype.ngOnInit=function(){this.autoCreate&&this.createComponent()},e.prototype.ngOnChanges=function(e){if(this.host)for(var t=0;t<this.properties.length;t++){var r="attr"+this.properties[t].substring(0,1).toUpperCase()+this.properties[t].substring(1),o=!1;if(this[r]!==undefined){if("object"==typeof this[r]){if(this[r]instanceof Array&&(o=this.arraysEqual(this[r],this.host.jqxTreeMap(this.properties[t]))),o)return!1;this.host.jqxTreeMap(this.properties[t],this[r]);continue}this[r]!==this.host.jqxTreeMap(this.properties[t])&&this.host.jqxTreeMap(this.properties[t],this[r])}}},e.prototype.arraysEqual=function(e,t){if(e&&!t||!e&&t)return!1;if(e.length!=t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0},e.prototype.manageAttributes=function(){for(var e={},t=0;t<this.properties.length;t++){var r="attr"+this.properties[t].substring(0,1).toUpperCase()+this.properties[t].substring(1);this[r]!==undefined&&(e[this.properties[t]]=this[r])}return e},e.prototype.moveClasses=function(e,t){var r,o=e.classList;0<o.length&&(r=t.classList).add.apply(r,function n(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e}(o)),e.className=""},e.prototype.moveStyles=function(e,t){var r=e.style.cssText;t.style.cssText=r,e.style.cssText=""},e.prototype.createComponent=function(e){this.host||(e?JQXLite.extend(e,this.manageAttributes()):e=this.manageAttributes(),this.host=JQXLite(this.elementRef.nativeElement.firstChild),this.moveClasses(this.elementRef.nativeElement,this.host[0]),this.moveStyles(this.elementRef.nativeElement,this.host[0]),this.host[0].style.marginLeft="1px",this.__wireEvents__(),this.widgetObject=jqwidgets.createInstance(this.host,"jqxTreeMap",e))},e.prototype.createWidget=function(e){this.createComponent(e)},e.prototype.__updateRect__=function(){this.host&&this.host.css({width:this.attrWidth,height:this.attrHeight})},e.prototype.setOptions=function(e){this.host.jqxTreeMap("setOptions",e)},e.prototype.baseColor=function(e){if(e===undefined)return this.host.jqxTreeMap("baseColor");this.host.jqxTreeMap("baseColor",e)},e.prototype.colorRanges=function(e){if(e===undefined)return this.host.jqxTreeMap("colorRanges");this.host.jqxTreeMap("colorRanges",e)},e.prototype.colorRange=function(e){if(e===undefined)return this.host.jqxTreeMap("colorRange");this.host.jqxTreeMap("colorRange",e)},e.prototype.colorMode=function(e){if(e===undefined)return this.host.jqxTreeMap("colorMode");this.host.jqxTreeMap("colorMode",e)},e.prototype.displayMember=function(e){if(e===undefined)return this.host.jqxTreeMap("displayMember");this.host.jqxTreeMap("displayMember",e)},e.prototype.height=function(e){if(e===undefined)return this.host.jqxTreeMap("height");this.host.jqxTreeMap("height",e)},e.prototype.hoverEnabled=function(e){if(e===undefined)return this.host.jqxTreeMap("hoverEnabled");this.host.jqxTreeMap("hoverEnabled",e)},e.prototype.headerHeight=function(e){if(e===undefined)return this.host.jqxTreeMap("headerHeight");this.host.jqxTreeMap("headerHeight",e)},e.prototype.legendLabel=function(e){if(e===undefined)return this.host.jqxTreeMap("legendLabel");this.host.jqxTreeMap("legendLabel",e)},e.prototype.legendPosition=function(e){if(e===undefined)return this.host.jqxTreeMap("legendPosition");this.host.jqxTreeMap("legendPosition",e)},e.prototype.legendScaleCallback=function(e){if(e===undefined)return this.host.jqxTreeMap("legendScaleCallback");this.host.jqxTreeMap("legendScaleCallback",e)},e.prototype.renderCallbacks=function(e){if(e===undefined)return this.host.jqxTreeMap("renderCallbacks");this.host.jqxTreeMap("renderCallbacks",e)},e.prototype.selectionEnabled=function(e){if(e===undefined)return this.host.jqxTreeMap("selectionEnabled");this.host.jqxTreeMap("selectionEnabled",e)},e.prototype.showLegend=function(e){if(e===undefined)return this.host.jqxTreeMap("showLegend");this.host.jqxTreeMap("showLegend",e)},e.prototype.source=function(e){if(e===undefined)return this.host.jqxTreeMap("source");this.host.jqxTreeMap("source",e)},e.prototype.theme=function(e){if(e===undefined)return this.host.jqxTreeMap("theme");this.host.jqxTreeMap("theme",e)},e.prototype.valueMember=function(e){if(e===undefined)return this.host.jqxTreeMap("valueMember");this.host.jqxTreeMap("valueMember",e)},e.prototype.width=function(e){if(e===undefined)return this.host.jqxTreeMap("width");this.host.jqxTreeMap("width",e)},e.prototype.destroy=function(){this.host.jqxTreeMap("destroy")},e.prototype.render=function(){this.host.jqxTreeMap("render")},e.prototype.__wireEvents__=function(){var t=this;this.host.on("bindingComplete",function(e){t.onBindingComplete.emit(e)})},e.decorators=[{type:t.Component,args:[{selector:"jqxTreeMap",template:"<div><ng-content></ng-content></div>"}]}],e.ctorParameters=function(){return[{type:t.ElementRef}]},e.propDecorators={attrBaseColor:[{type:t.Input,args:["baseColor"]}],attrColorRanges:[{type:t.Input,args:["colorRanges"]}],attrColorRange:[{type:t.Input,args:["colorRange"]}],attrColorMode:[{type:t.Input,args:["colorMode"]}],attrDisplayMember:[{type:t.Input,args:["displayMember"]}],attrHoverEnabled:[{type:t.Input,args:["hoverEnabled"]}],attrHeaderHeight:[{type:t.Input,args:["headerHeight"]}],attrLegendLabel:[{type:t.Input,args:["legendLabel"]}],attrLegendPosition:[{type:t.Input,args:["legendPosition"]}],attrLegendScaleCallback:[{type:t.Input,args:["legendScaleCallback"]}],attrRenderCallbacks:[{type:t.Input,args:["renderCallbacks"]}],attrSelectionEnabled:[{type:t.Input,args:["selectionEnabled"]}],attrShowLegend:[{type:t.Input,args:["showLegend"]}],attrSource:[{type:t.Input,args:["source"]}],attrTheme:[{type:t.Input,args:["theme"]}],attrValueMember:[{type:t.Input,args:["valueMember"]}],attrWidth:[{type:t.Input,args:["width"]}],attrHeight:[{type:t.Input,args:["height"]}],autoCreate:[{type:t.Input,args:["auto-create"]}],onBindingComplete:[{type:t.Output}]},e}(),o=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[],declarations:[r],exports:[r]}]}],e}();e.jqxTreeMapComponent=r,e.jqxTreeMapModule=o,Object.defineProperty(e,"__esModule",{value:!0})});
