require('../../jqwidgets/jqxcore');
require('../../jqwidgets/jqxdata');
require('../../jqwidgets/jqxdata.export');
require('../../jqwidgets/jqxdate');
require('../../jqwidgets/jqxbuttons');
require('../../jqwidgets/jqxmenu');
require('../../jqwidgets/jqxtooltip');
require('../../jqwidgets/jqxscrollbar');
require('../../jqwidgets/jqxradiobutton');
require('../../jqwidgets/jqxcheckbox');
require('../../jqwidgets/jqxwindow');
require('../../jqwidgets/jqxlistbox');
require('../../jqwidgets/jqxcolorpicker');
require('../../jqwidgets/jqxcombobox');
require('../../jqwidgets/jqxdropdownlist');
require('../../jqwidgets/jqxnumberinput');
require('../../jqwidgets/jqxinput');
require('../../jqwidgets/globalization/globalize');
require('../../jqwidgets/jqxcalendar');
require('../../jqwidgets/jqxdatetimeinput');
require('../../jqwidgets/jqxscheduler');
require('../../jqwidgets/jqxscheduler.api');
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("jqwidgets-ng/jqxscheduler",["exports","@angular/core"],e):e((t["jqwidgets-ng"]=t["jqwidgets-ng"]||{},t["jqwidgets-ng"].jqxscheduler={}),t.ng.core)}(this,function(t,e){"use strict";function r(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,i,r=n.call(t),s=[];try{for(;(void 0===e||0<e--)&&!(o=r.next()).done;)s.push(o.value)}catch(h){i={error:h}}finally{try{o&&!o.done&&(n=r["return"])&&n.call(r)}finally{if(i)throw i.error}}return s}var n=function(){function t(t){this.autoCreate=!0,this.properties=["appointmentOpacity","appointmentsMinHeight","appointmentDataFields","appointmentTooltips","columnsHeight","contextMenu","contextMenuOpen","contextMenuClose","contextMenuItemClick","contextMenuCreate","changedAppointments","disabled","date","dayNameFormat","enableHover","editDialog","editDialogDateTimeFormatString","editDialogDateFormatString","editDialogOpen","editDialogCreate","editDialogKeyDown","editDialogClose","exportSettings","height","legendPosition","legendHeight","localization","min","max","ready","renderAppointment","rendering","rendered","rtl","resources","rowsHeight","showToolbar","showLegend","scrollBarSize","source","statuses","touchRowsHeight","theme","touchAppointmentsMinHeight","touchScrollBarSize","timeZone","touchDayNameFormat","toolBarRangeFormat","toolBarRangeFormatAbbr","toolbarHeight","views","view","width"],this.onAppointmentChange=new e.EventEmitter,this.onAppointmentClick=new e.EventEmitter,this.onAppointmentDoubleClick=new e.EventEmitter,this.onAppointmentDelete=new e.EventEmitter,this.onAppointmentAdd=new e.EventEmitter,this.onBindingComplete=new e.EventEmitter,this.onCellClick=new e.EventEmitter,this.onCellDoubleClick=new e.EventEmitter,this.onContextMenuOpen=new e.EventEmitter,this.onContextMenuClose=new e.EventEmitter,this.onContextMenuItemClick=new e.EventEmitter,this.onContextMenuCreate=new e.EventEmitter,this.onDateChange=new e.EventEmitter,this.onEditRecurrenceDialogOpen=new e.EventEmitter,this.onEditRecurrenceDialogClose=new e.EventEmitter,this.onEditDialogCreate=new e.EventEmitter,this.onEditDialogOpen=new e.EventEmitter,this.onEditDialogClose=new e.EventEmitter,this.onViewChange=new e.EventEmitter,this.elementRef=t}return t.prototype.ngOnInit=function(){this.autoCreate&&this.createComponent()},t.prototype.ngOnChanges=function(t){if(this.host)for(var e=0;e<this.properties.length;e++){var n="attr"+this.properties[e].substring(0,1).toUpperCase()+this.properties[e].substring(1),o=!1;if(this[n]!==undefined){if("object"==typeof this[n]){if(this[n]instanceof Array&&(o=this.arraysEqual(this[n],this.host.jqxScheduler(this.properties[e]))),o)return!1;this.host.jqxScheduler(this.properties[e],this[n]);continue}this[n]!==this.host.jqxScheduler(this.properties[e])&&this.host.jqxScheduler(this.properties[e],this[n])}}},t.prototype.arraysEqual=function(t,e){if(t&&!e||!t&&e)return!1;if(t.length!=e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0},t.prototype.manageAttributes=function(){for(var t={},e=0;e<this.properties.length;e++){var n="attr"+this.properties[e].substring(0,1).toUpperCase()+this.properties[e].substring(1);this[n]!==undefined&&(t[this.properties[e]]=this[n])}return t},t.prototype.moveClasses=function(t,e){var n,o=t.classList;0<o.length&&(n=e.classList).add.apply(n,function i(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(r(arguments[e]));return t}(o)),t.className=""},t.prototype.moveStyles=function(t,e){var n=t.style.cssText;e.style.cssText=n,t.style.cssText=""},t.prototype.createComponent=function(t){this.host||(t?JQXLite.extend(t,this.manageAttributes()):t=this.manageAttributes(),this.host=JQXLite(this.elementRef.nativeElement.firstChild),this.moveClasses(this.elementRef.nativeElement,this.host[0]),this.moveStyles(this.elementRef.nativeElement,this.host[0]),this.__wireEvents__(),this.widgetObject=jqwidgets.createInstance(this.host,"jqxScheduler",t))},t.prototype.createWidget=function(t){this.createComponent(t)},t.prototype.__updateRect__=function(){this.host&&this.host.css({width:this.attrWidth,height:this.attrHeight})},t.prototype.setOptions=function(t){this.host.jqxScheduler("setOptions",t)},t.prototype.appointmentOpacity=function(t){if(t===undefined)return this.host.jqxScheduler("appointmentOpacity");this.host.jqxScheduler("appointmentOpacity",t)},t.prototype.appointmentsMinHeight=function(t){if(t===undefined)return this.host.jqxScheduler("appointmentsMinHeight");this.host.jqxScheduler("appointmentsMinHeight",t)},t.prototype.appointmentDataFields=function(t){if(t===undefined)return this.host.jqxScheduler("appointmentDataFields");this.host.jqxScheduler("appointmentDataFields",t)},t.prototype.appointmentTooltips=function(t){if(t===undefined)return this.host.jqxScheduler("appointmentTooltips");this.host.jqxScheduler("appointmentTooltips",t)},t.prototype.columnsHeight=function(t){if(t===undefined)return this.host.jqxScheduler("columnsHeight");this.host.jqxScheduler("columnsHeight",t)},t.prototype.contextMenu=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenu");this.host.jqxScheduler("contextMenu",t)},t.prototype.contextMenuOpen=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenuOpen");this.host.jqxScheduler("contextMenuOpen",t)},t.prototype.contextMenuClose=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenuClose");this.host.jqxScheduler("contextMenuClose",t)},t.prototype.contextMenuItemClick=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenuItemClick");this.host.jqxScheduler("contextMenuItemClick",t)},t.prototype.contextMenuCreate=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenuCreate");this.host.jqxScheduler("contextMenuCreate",t)},t.prototype.changedAppointments=function(t){if(t===undefined)return this.host.jqxScheduler("changedAppointments");this.host.jqxScheduler("changedAppointments",t)},t.prototype.disabled=function(t){if(t===undefined)return this.host.jqxScheduler("disabled");this.host.jqxScheduler("disabled",t)},t.prototype.date=function(t){if(t===undefined)return this.host.jqxScheduler("date");this.host.jqxScheduler("date",t)},t.prototype.dayNameFormat=function(t){if(t===undefined)return this.host.jqxScheduler("dayNameFormat");this.host.jqxScheduler("dayNameFormat",t)},t.prototype.enableHover=function(t){if(t===undefined)return this.host.jqxScheduler("enableHover");this.host.jqxScheduler("enableHover",t)},t.prototype.editDialog=function(t){if(t===undefined)return this.host.jqxScheduler("editDialog");this.host.jqxScheduler("editDialog",t)},t.prototype.editDialogDateTimeFormatString=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogDateTimeFormatString");this.host.jqxScheduler("editDialogDateTimeFormatString",t)},t.prototype.editDialogDateFormatString=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogDateFormatString");this.host.jqxScheduler("editDialogDateFormatString",t)},t.prototype.editDialogOpen=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogOpen");this.host.jqxScheduler("editDialogOpen",t)},t.prototype.editDialogCreate=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogCreate");this.host.jqxScheduler("editDialogCreate",t)},t.prototype.editDialogKeyDown=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogKeyDown");this.host.jqxScheduler("editDialogKeyDown",t)},t.prototype.editDialogClose=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogClose");this.host.jqxScheduler("editDialogClose",t)},t.prototype.exportSettings=function(t){if(t===undefined)return this.host.jqxScheduler("exportSettings");this.host.jqxScheduler("exportSettings",t)},t.prototype.height=function(t){if(t===undefined)return this.host.jqxScheduler("height");this.host.jqxScheduler("height",t)},t.prototype.legendPosition=function(t){if(t===undefined)return this.host.jqxScheduler("legendPosition");this.host.jqxScheduler("legendPosition",t)},t.prototype.legendHeight=function(t){if(t===undefined)return this.host.jqxScheduler("legendHeight");this.host.jqxScheduler("legendHeight",t)},t.prototype.localization=function(t){if(t===undefined)return this.host.jqxScheduler("localization");this.host.jqxScheduler("localization",t)},t.prototype.min=function(t){if(t===undefined)return this.host.jqxScheduler("min");this.host.jqxScheduler("min",t)},t.prototype.max=function(t){if(t===undefined)return this.host.jqxScheduler("max");this.host.jqxScheduler("max",t)},t.prototype.ready=function(t){if(t===undefined)return this.host.jqxScheduler("ready");this.host.jqxScheduler("ready",t)},t.prototype.renderAppointment=function(t){if(t===undefined)return this.host.jqxScheduler("renderAppointment");this.host.jqxScheduler("renderAppointment",t)},t.prototype.rendering=function(t){if(t===undefined)return this.host.jqxScheduler("rendering");this.host.jqxScheduler("rendering",t)},t.prototype.rendered=function(t){if(t===undefined)return this.host.jqxScheduler("rendered");this.host.jqxScheduler("rendered",t)},t.prototype.rtl=function(t){if(t===undefined)return this.host.jqxScheduler("rtl");this.host.jqxScheduler("rtl",t)},t.prototype.resources=function(t){if(t===undefined)return this.host.jqxScheduler("resources");this.host.jqxScheduler("resources",t)},t.prototype.rowsHeight=function(t){if(t===undefined)return this.host.jqxScheduler("rowsHeight");this.host.jqxScheduler("rowsHeight",t)},t.prototype.showToolbar=function(t){if(t===undefined)return this.host.jqxScheduler("showToolbar");this.host.jqxScheduler("showToolbar",t)},t.prototype.showLegend=function(t){if(t===undefined)return this.host.jqxScheduler("showLegend");this.host.jqxScheduler("showLegend",t)},t.prototype.scrollBarSize=function(t){if(t===undefined)return this.host.jqxScheduler("scrollBarSize");this.host.jqxScheduler("scrollBarSize",t)},t.prototype.source=function(t){if(t===undefined)return this.host.jqxScheduler("source");this.host.jqxScheduler("source",t)},t.prototype.statuses=function(t){if(t===undefined)return this.host.jqxScheduler("statuses");this.host.jqxScheduler("statuses",t)},t.prototype.touchRowsHeight=function(t){if(t===undefined)return this.host.jqxScheduler("touchRowsHeight");this.host.jqxScheduler("touchRowsHeight",t)},t.prototype.theme=function(t){if(t===undefined)return this.host.jqxScheduler("theme");this.host.jqxScheduler("theme",t)},t.prototype.touchAppointmentsMinHeight=function(t){if(t===undefined)return this.host.jqxScheduler("touchAppointmentsMinHeight");this.host.jqxScheduler("touchAppointmentsMinHeight",t)},t.prototype.touchScrollBarSize=function(t){if(t===undefined)return this.host.jqxScheduler("touchScrollBarSize");this.host.jqxScheduler("touchScrollBarSize",t)},t.prototype.timeZone=function(t){if(t===undefined)return this.host.jqxScheduler("timeZone");this.host.jqxScheduler("timeZone",t)},t.prototype.touchDayNameFormat=function(t){if(t===undefined)return this.host.jqxScheduler("touchDayNameFormat");this.host.jqxScheduler("touchDayNameFormat",t)},t.prototype.toolBarRangeFormat=function(t){if(t===undefined)return this.host.jqxScheduler("toolBarRangeFormat");this.host.jqxScheduler("toolBarRangeFormat",t)},t.prototype.toolBarRangeFormatAbbr=function(t){if(t===undefined)return this.host.jqxScheduler("toolBarRangeFormatAbbr");this.host.jqxScheduler("toolBarRangeFormatAbbr",t)},t.prototype.toolbarHeight=function(t){if(t===undefined)return this.host.jqxScheduler("toolbarHeight");this.host.jqxScheduler("toolbarHeight",t)},t.prototype.views=function(t){if(t===undefined)return this.host.jqxScheduler("views");this.host.jqxScheduler("views",t)},t.prototype.view=function(t){if(t===undefined)return this.host.jqxScheduler("view");this.host.jqxScheduler("view",t)},t.prototype.width=function(t){if(t===undefined)return this.host.jqxScheduler("width");this.host.jqxScheduler("width",t)},t.prototype.addAppointment=function(t){this.host.jqxScheduler("addAppointment",t)},t.prototype.beginAppointmentsUpdate=function(){this.host.jqxScheduler("beginAppointmentsUpdate")},t.prototype.clearAppointmentsSelection=function(){this.host.jqxScheduler("clearAppointmentsSelection")},t.prototype.clearSelection=function(){this.host.jqxScheduler("clearSelection")},t.prototype.closeMenu=function(){this.host.jqxScheduler("closeMenu")},t.prototype.closeDialog=function(){this.host.jqxScheduler("closeDialog")},t.prototype.deleteAppointment=function(t){this.host.jqxScheduler("deleteAppointment",t)},t.prototype.destroy=function(){this.host.jqxScheduler("destroy")},t.prototype.endAppointmentsUpdate=function(){this.host.jqxScheduler("endAppointmentsUpdate")},t.prototype.ensureAppointmentVisible=function(t){this.host.jqxScheduler("ensureAppointmentVisible",t)},t.prototype.ensureVisible=function(t,e){this.host.jqxScheduler("ensureVisible",t,e)},t.prototype.exportData=function(t){return this.host.jqxScheduler("exportData",t)},t.prototype.focus=function(){this.host.jqxScheduler("focus")},t.prototype.getAppointmentProperty=function(t,e){return this.host.jqxScheduler("getAppointmentProperty",t,e)},t.prototype.getSelection=function(){return this.host.jqxScheduler("getSelection")},t.prototype.getAppointments=function(){return this.host.jqxScheduler("getAppointments")},t.prototype.getDataAppointments=function(){return this.host.jqxScheduler("getDataAppointments")},t.prototype.hideAppointmentsByResource=function(t){this.host.jqxScheduler("hideAppointmentsByResource",t)},t.prototype.openMenu=function(t,e){this.host.jqxScheduler("openMenu",t,e)},t.prototype.openDialog=function(t,e){this.host.jqxScheduler("openDialog",t,e)},t.prototype.selectAppointment=function(t){this.host.jqxScheduler("selectAppointment",t)},t.prototype.setAppointmentProperty=function(t,e,n){this.host.jqxScheduler("setAppointmentProperty",t,e,n)},t.prototype.selectCell=function(t,e,n){this.host.jqxScheduler("selectCell",t,e,n)},t.prototype.showAppointmentsByResource=function(t){this.host.jqxScheduler("showAppointmentsByResource",t)},t.prototype.scrollWidth=function(){return this.host.jqxScheduler("scrollWidth")},t.prototype.scrollHeight=function(){return this.host.jqxScheduler("scrollHeight")},t.prototype.scrollLeft=function(t){this.host.jqxScheduler("scrollLeft",t)},t.prototype.scrollTop=function(t){this.host.jqxScheduler("scrollTop",t)},t.prototype.__wireEvents__=function(){var e=this;this.host.on("appointmentChange",function(t){e.onAppointmentChange.emit(t)}),this.host.on("appointmentClick",function(t){e.onAppointmentClick.emit(t)}),this.host.on("appointmentDoubleClick",function(t){e.onAppointmentDoubleClick.emit(t)}),this.host.on("appointmentDelete",function(t){e.onAppointmentDelete.emit(t)}),this.host.on("appointmentAdd",function(t){e.onAppointmentAdd.emit(t)}),this.host.on("bindingComplete",function(t){e.onBindingComplete.emit(t)}),this.host.on("cellClick",function(t){e.onCellClick.emit(t)}),this.host.on("cellDoubleClick",function(t){e.onCellDoubleClick.emit(t)}),this.host.on("contextMenuOpen",function(t){e.onContextMenuOpen.emit(t)}),this.host.on("contextMenuClose",function(t){e.onContextMenuClose.emit(t)}),this.host.on("contextMenuItemClick",function(t){e.onContextMenuItemClick.emit(t)}),this.host.on("contextMenuCreate",function(t){e.onContextMenuCreate.emit(t)}),this.host.on("dateChange",function(t){e.onDateChange.emit(t)}),this.host.on("editRecurrenceDialogOpen",function(t){e.onEditRecurrenceDialogOpen.emit(t)}),this.host.on("editRecurrenceDialogClose",function(t){e.onEditRecurrenceDialogClose.emit(t)}),this.host.on("editDialogCreate",function(t){e.onEditDialogCreate.emit(t)}),this.host.on("editDialogOpen",function(t){e.onEditDialogOpen.emit(t)}),this.host.on("editDialogClose",function(t){e.onEditDialogClose.emit(t)}),this.host.on("viewChange",function(t){e.onViewChange.emit(t)})},t.decorators=[{type:e.Component,args:[{selector:"jqxScheduler",template:"<div><ng-content></ng-content></div>"}]}],t.ctorParameters=function(){return[{type:e.ElementRef}]},t.propDecorators={attrAppointmentOpacity:[{type:e.Input,args:["appointmentOpacity"]}],attrAppointmentsMinHeight:[{type:e.Input,args:["appointmentsMinHeight"]}],attrAppointmentDataFields:[{type:e.Input,args:["appointmentDataFields"]}],attrAppointmentTooltips:[{type:e.Input,args:["appointmentTooltips"]}],attrColumnsHeight:[{type:e.Input,args:["columnsHeight"]}],attrContextMenu:[{type:e.Input,args:["contextMenu"]}],attrContextMenuOpen:[{type:e.Input,args:["contextMenuOpen"]}],attrContextMenuClose:[{type:e.Input,args:["contextMenuClose"]}],attrContextMenuItemClick:[{type:e.Input,args:["contextMenuItemClick"]}],attrContextMenuCreate:[{type:e.Input,args:["contextMenuCreate"]}],attrChangedAppointments:[{type:e.Input,args:["changedAppointments"]}],attrDisabled:[{type:e.Input,args:["disabled"]}],attrDate:[{type:e.Input,args:["date"]}],attrDayNameFormat:[{type:e.Input,args:["dayNameFormat"]}],attrEnableHover:[{type:e.Input,args:["enableHover"]}],attrEditDialog:[{type:e.Input,args:["editDialog"]}],attrEditDialogDateTimeFormatString:[{type:e.Input,args:["editDialogDateTimeFormatString"]}],attrEditDialogDateFormatString:[{type:e.Input,args:["editDialogDateFormatString"]}],attrEditDialogOpen:[{type:e.Input,args:["editDialogOpen"]}],attrEditDialogCreate:[{type:e.Input,args:["editDialogCreate"]}],attrEditDialogKeyDown:[{type:e.Input,args:["editDialogKeyDown"]}],attrEditDialogClose:[{type:e.Input,args:["editDialogClose"]}],attrExportSettings:[{type:e.Input,args:["exportSettings"]}],attrLegendPosition:[{type:e.Input,args:["legendPosition"]}],attrLegendHeight:[{type:e.Input,args:["legendHeight"]}],attrLocalization:[{type:e.Input,args:["localization"]}],attrMin:[{type:e.Input,args:["min"]}],attrMax:[{type:e.Input,args:["max"]}],attrReady:[{type:e.Input,args:["ready"]}],attrRenderAppointment:[{type:e.Input,args:["renderAppointment"]}],attrRendering:[{type:e.Input,args:["rendering"]}],attrRendered:[{type:e.Input,args:["rendered"]}],attrRtl:[{type:e.Input,args:["rtl"]}],attrResources:[{type:e.Input,args:["resources"]}],attrRowsHeight:[{type:e.Input,args:["rowsHeight"]}],attrShowToolbar:[{type:e.Input,args:["showToolbar"]}],attrShowLegend:[{type:e.Input,args:["showLegend"]}],attrScrollBarSize:[{type:e.Input,args:["scrollBarSize"]}],attrSource:[{type:e.Input,args:["source"]}],attrStatuses:[{type:e.Input,args:["statuses"]}],attrTouchRowsHeight:[{type:e.Input,args:["touchRowsHeight"]}],attrTheme:[{type:e.Input,args:["theme"]}],attrTouchAppointmentsMinHeight:[{type:e.Input,args:["touchAppointmentsMinHeight"]}],attrTouchScrollBarSize:[{type:e.Input,args:["touchScrollBarSize"]}],attrTimeZone:[{type:e.Input,args:["timeZone"]}],attrTouchDayNameFormat:[{type:e.Input,args:["touchDayNameFormat"]}],attrToolBarRangeFormat:[{type:e.Input,args:["toolBarRangeFormat"]}],attrToolBarRangeFormatAbbr:[{type:e.Input,args:["toolBarRangeFormatAbbr"]}],attrToolbarHeight:[{type:e.Input,args:["toolbarHeight"]}],attrViews:[{type:e.Input,args:["views"]}],attrView:[{type:e.Input,args:["view"]}],attrWidth:[{type:e.Input,args:["width"]}],attrHeight:[{type:e.Input,args:["height"]}],autoCreate:[{type:e.Input,args:["auto-create"]}],onAppointmentChange:[{type:e.Output}],onAppointmentClick:[{type:e.Output}],onAppointmentDoubleClick:[{type:e.Output}],onAppointmentDelete:[{type:e.Output}],onAppointmentAdd:[{type:e.Output}],onBindingComplete:[{type:e.Output}],onCellClick:[{type:e.Output}],onCellDoubleClick:[{type:e.Output}],onContextMenuOpen:[{type:e.Output}],onContextMenuClose:[{type:e.Output}],onContextMenuItemClick:[{type:e.Output}],onContextMenuCreate:[{type:e.Output}],onDateChange:[{type:e.Output}],onEditRecurrenceDialogOpen:[{type:e.Output}],onEditRecurrenceDialogClose:[{type:e.Output}],onEditDialogCreate:[{type:e.Output}],onEditDialogOpen:[{type:e.Output}],onEditDialogClose:[{type:e.Output}],onViewChange:[{type:e.Output}]},t}(),o=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[],declarations:[n],exports:[n]}]}],t}();t.jqxSchedulerComponent=n,t.jqxSchedulerModule=o,Object.defineProperty(t,"__esModule",{value:!0})});
