require('../../jqwidgets/jqxcore');
require('../../jqwidgets/jqxdata');
require('../../jqwidgets/jqxdata.export');
require('../../jqwidgets/jqxdraw');
require('../../jqwidgets/jqxchart.core');
require('../../jqwidgets/jqxchart.api');
require('../../jqwidgets/jqxchart.annotations');
require('../../jqwidgets/jqxchart.rangeselector');
require('../../jqwidgets/jqxchart.waterfall');
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("jqwidgets-ng/jqxchart",["exports","@angular/core"],e):e((t["jqwidgets-ng"]=t["jqwidgets-ng"]||{},t["jqwidgets-ng"].jqxchart={}),t.ng.core)}(this,function(t,o){"use strict";function n(t,e){var o="function"==typeof Symbol&&t[Symbol.iterator];if(!o)return t;var r,i,n=o.call(t),s=[];try{for(;(void 0===e||0<e--)&&!(r=n.next()).done;)s.push(r.value)}catch(h){i={error:h}}finally{try{r&&!r.done&&(o=n["return"])&&o.call(n)}finally{if(i)throw i.error}}return s}var e=function(){function t(t){var e=this;this.autoCreate=!0,this.properties=["title","description","source","showBorderLine","borderLineColor","borderLineWidth","backgroundColor","backgroundImage","showLegend","legendLayout","padding","titlePadding","colorScheme","greyScale","showToolTips","toolTipShowDelay","toolTipHideDelay","toolTipMoveDuration","drawBefore","draw","rtl","enableCrosshairs","crosshairsColor","crosshairsDashStyle","crosshairsLineWidth","columnSeriesOverlap","enabled","enableAnimations","animationDuration","enableAxisTextAnimation","renderEngine","xAxis","valueAxis","seriesGroups"],this.onToggle=new o.EventEmitter,this.onClick=new o.EventEmitter,this.onRefreshBegin=new o.EventEmitter,this.onRefreshEnd=new o.EventEmitter,this.onRangeSelectionChanging=new o.EventEmitter,this.onRangeSelectionChanged=new o.EventEmitter,this.elementRef=t,JQXLite(window).resize(function(){e.__updateRect__()})}return t.prototype.ngOnInit=function(){this.autoCreate&&this.createComponent()},t.prototype.ngOnChanges=function(t){if(this.host){(t.hasOwnProperty("attrWidth")||t.hasOwnProperty("attrHeight"))&&this.__updateRect__();for(var e=0;e<this.properties.length;e++){var o="attr"+this.properties[e].substring(0,1).toUpperCase()+this.properties[e].substring(1),r=!1;if(this[o]!==undefined){if("object"==typeof this[o]){if(this[o]instanceof Array&&(r=this.arraysEqual(this[o],this.host.jqxChart(this.properties[e]))),r)return!1;this.host.jqxChart(this.properties[e],this[o]);continue}this[o]!==this.host.jqxChart(this.properties[e])&&this.host.jqxChart(this.properties[e],this[o])}}}},t.prototype.arraysEqual=function(t,e){if(t&&!e||!t&&e)return!1;if(t.length!=e.length)return!1;for(var o=0;o<t.length;o++)if(t[o]!==e[o])return!1;return!0},t.prototype.manageAttributes=function(){for(var t={},e=0;e<this.properties.length;e++){var o="attr"+this.properties[e].substring(0,1).toUpperCase()+this.properties[e].substring(1);this[o]!==undefined&&(t[this.properties[e]]=this[o])}return t},t.prototype.moveClasses=function(t,e){var o,r=t.classList;0<r.length&&(o=e.classList).add.apply(o,function i(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(n(arguments[e]));return t}(r)),t.className=""},t.prototype.moveStyles=function(t,e){var o=t.style.cssText;e.style.cssText=o,t.style.cssText=""},t.prototype.createComponent=function(t){this.host||(t?JQXLite.extend(t,this.manageAttributes()):t=this.manageAttributes(),this.host=JQXLite(this.elementRef.nativeElement.firstChild),this.moveClasses(this.elementRef.nativeElement,this.host[0]),this.moveStyles(this.elementRef.nativeElement,this.host[0]),this.__wireEvents__(),this.widgetObject=jqwidgets.createInstance(this.host,"jqxChart",t),this.__updateRect__())},t.prototype.createWidget=function(t){this.createComponent(t)},t.prototype.__updateRect__=function(){this.host&&this.host.css({width:this.attrWidth,height:this.attrHeight}),this.refresh()},t.prototype.setOptions=function(t){this.host.jqxChart("setOptions",t)},t.prototype.title=function(t){if(t===undefined)return this.host.jqxChart("title");this.host.jqxChart("title",t)},t.prototype.description=function(t){if(t===undefined)return this.host.jqxChart("description");this.host.jqxChart("description",t)},t.prototype.source=function(t){if(t===undefined)return this.host.jqxChart("source");this.host.jqxChart("source",t)},t.prototype.showBorderLine=function(t){if(t===undefined)return this.host.jqxChart("showBorderLine");this.host.jqxChart("showBorderLine",t)},t.prototype.borderLineColor=function(t){if(t===undefined)return this.host.jqxChart("borderLineColor");this.host.jqxChart("borderLineColor",t)},t.prototype.borderLineWidth=function(t){if(t===undefined)return this.host.jqxChart("borderLineWidth");this.host.jqxChart("borderLineWidth",t)},t.prototype.backgroundColor=function(t){if(t===undefined)return this.host.jqxChart("backgroundColor");this.host.jqxChart("backgroundColor",t)},t.prototype.backgroundImage=function(t){if(t===undefined)return this.host.jqxChart("backgroundImage");this.host.jqxChart("backgroundImage",t)},t.prototype.showLegend=function(t){if(t===undefined)return this.host.jqxChart("showLegend");this.host.jqxChart("showLegend",t)},t.prototype.legendLayout=function(t){if(t===undefined)return this.host.jqxChart("legendLayout");this.host.jqxChart("legendLayout",t)},t.prototype.padding=function(t){if(t===undefined)return this.host.jqxChart("padding");this.host.jqxChart("padding",t)},t.prototype.titlePadding=function(t){if(t===undefined)return this.host.jqxChart("titlePadding");this.host.jqxChart("titlePadding",t)},t.prototype.colorScheme=function(t){if(t===undefined)return this.host.jqxChart("colorScheme");this.host.jqxChart("colorScheme",t)},t.prototype.greyScale=function(t){if(t===undefined)return this.host.jqxChart("greyScale");this.host.jqxChart("greyScale",t)},t.prototype.showToolTips=function(t){if(t===undefined)return this.host.jqxChart("showToolTips");this.host.jqxChart("showToolTips",t)},t.prototype.toolTipShowDelay=function(t){if(t===undefined)return this.host.jqxChart("toolTipShowDelay");this.host.jqxChart("toolTipShowDelay",t)},t.prototype.toolTipHideDelay=function(t){if(t===undefined)return this.host.jqxChart("toolTipHideDelay");this.host.jqxChart("toolTipHideDelay",t)},t.prototype.toolTipMoveDuration=function(t){if(t===undefined)return this.host.jqxChart("toolTipMoveDuration");this.host.jqxChart("toolTipMoveDuration",t)},t.prototype.drawBefore=function(t){if(t===undefined)return this.host.jqxChart("drawBefore");this.host.jqxChart("drawBefore",t)},t.prototype.draw=function(t){if(t===undefined)return this.host.jqxChart("draw");this.host.jqxChart("draw",t)},t.prototype.rtl=function(t){if(t===undefined)return this.host.jqxChart("rtl");this.host.jqxChart("rtl",t)},t.prototype.enableCrosshairs=function(t){if(t===undefined)return this.host.jqxChart("enableCrosshairs");this.host.jqxChart("enableCrosshairs",t)},t.prototype.crosshairsColor=function(t){if(t===undefined)return this.host.jqxChart("crosshairsColor");this.host.jqxChart("crosshairsColor",t)},t.prototype.crosshairsDashStyle=function(t){if(t===undefined)return this.host.jqxChart("crosshairsDashStyle");this.host.jqxChart("crosshairsDashStyle",t)},t.prototype.crosshairsLineWidth=function(t){if(t===undefined)return this.host.jqxChart("crosshairsLineWidth");this.host.jqxChart("crosshairsLineWidth",t)},t.prototype.columnSeriesOverlap=function(t){if(t===undefined)return this.host.jqxChart("columnSeriesOverlap");this.host.jqxChart("columnSeriesOverlap",t)},t.prototype.enabled=function(t){if(t===undefined)return this.host.jqxChart("enabled");this.host.jqxChart("enabled",t)},t.prototype.enableAnimations=function(t){if(t===undefined)return this.host.jqxChart("enableAnimations");this.host.jqxChart("enableAnimations",t)},t.prototype.animationDuration=function(t){if(t===undefined)return this.host.jqxChart("animationDuration");this.host.jqxChart("animationDuration",t)},t.prototype.enableAxisTextAnimation=function(t){if(t===undefined)return this.host.jqxChart("enableAxisTextAnimation");this.host.jqxChart("enableAxisTextAnimation",t)},t.prototype.renderEngine=function(t){if(t===undefined)return this.host.jqxChart("renderEngine");this.host.jqxChart("renderEngine",t)},t.prototype.xAxis=function(t){if(t===undefined)return this.host.jqxChart("xAxis");this.host.jqxChart("xAxis",t)},t.prototype.valueAxis=function(t){if(t===undefined)return this.host.jqxChart("valueAxis");this.host.jqxChart("valueAxis",t)},t.prototype.seriesGroups=function(t){if(t===undefined)return this.host.jqxChart("seriesGroups");this.host.jqxChart("seriesGroups",t)},t.prototype.getInstance=function(){return this.host.jqxChart("getInstance")},t.prototype.refresh=function(){this.host.jqxChart("refresh")},t.prototype.update=function(){this.host.jqxChart("update")},t.prototype.destroy=function(){this.host.jqxChart("destroy")},t.prototype.addColorScheme=function(t,e){this.host.jqxChart("addColorScheme",t,e)},t.prototype.removeColorScheme=function(t){this.host.jqxChart("removeColorScheme",t)},t.prototype.getItemsCount=function(t,e){return this.host.jqxChart("getItemsCount",t,e)},t.prototype.getItemCoord=function(t,e,o){return this.host.jqxChart("getItemCoord",t,e,o)},t.prototype.getXAxisRect=function(t){return this.host.jqxChart("getXAxisRect",t)},t.prototype.getXAxisLabels=function(t){return this.host.jqxChart("getXAxisLabels",t)},t.prototype.getValueAxisRect=function(t){return this.host.jqxChart("getValueAxisRect",t)},t.prototype.getValueAxisLabels=function(t){return this.host.jqxChart("getValueAxisLabels",t)},t.prototype.getColorScheme=function(t){return this.host.jqxChart("getColorScheme",t)},t.prototype.hideSerie=function(t,e,o){this.host.jqxChart("hideSerie",t,e,o)},t.prototype.showSerie=function(t,e,o){this.host.jqxChart("showSerie",t,e,o)},t.prototype.hideToolTip=function(t){this.host.jqxChart("hideToolTip",t)},t.prototype.showToolTip=function(t,e,o,r,i){this.host.jqxChart("showToolTip",t,e,o,r,i)},t.prototype.saveAsJPEG=function(t,e){this.host.jqxChart("saveAsJPEG",t,e)},t.prototype.saveAsPNG=function(t,e){this.host.jqxChart("saveAsPNG",t,e)},t.prototype.saveAsPDF=function(t,e){this.host.jqxChart("saveAsPDF",t,e)},t.prototype.getXAxisValue=function(t,e){return this.host.jqxChart("getXAxisValue",t,e)},t.prototype.getValueAxisValue=function(t,e){return this.host.jqxChart("getValueAxisValue",t,e)},t.prototype.__wireEvents__=function(){var e=this;this.host.on("toggle",function(t){e.onToggle.emit(t)}),this.host.on("click",function(t){e.onClick.emit(t)}),this.host.on("refreshBegin",function(t){e.onRefreshBegin.emit(t)}),this.host.on("refreshEnd",function(t){e.onRefreshEnd.emit(t)}),this.host.on("rangeSelectionChanging",function(t){e.onRangeSelectionChanging.emit(t)}),this.host.on("rangeSelectionChanged",function(t){e.onRangeSelectionChanged.emit(t)})},t.decorators=[{type:o.Component,args:[{selector:"jqxChart",template:"<div><ng-content></ng-content></div>"}]}],t.ctorParameters=function(){return[{type:o.ElementRef}]},t.propDecorators={attrTitle:[{type:o.Input,args:["title"]}],attrDescription:[{type:o.Input,args:["description"]}],attrSource:[{type:o.Input,args:["source"]}],attrShowBorderLine:[{type:o.Input,args:["showBorderLine"]}],attrBorderLineColor:[{type:o.Input,args:["borderLineColor"]}],attrBorderLineWidth:[{type:o.Input,args:["borderLineWidth"]}],attrBackgroundColor:[{type:o.Input,args:["backgroundColor"]}],attrBackgroundImage:[{type:o.Input,args:["backgroundImage"]}],attrShowLegend:[{type:o.Input,args:["showLegend"]}],attrLegendLayout:[{type:o.Input,args:["legendLayout"]}],attrPadding:[{type:o.Input,args:["padding"]}],attrTitlePadding:[{type:o.Input,args:["titlePadding"]}],attrColorScheme:[{type:o.Input,args:["colorScheme"]}],attrGreyScale:[{type:o.Input,args:["greyScale"]}],attrShowToolTips:[{type:o.Input,args:["showToolTips"]}],attrToolTipShowDelay:[{type:o.Input,args:["toolTipShowDelay"]}],attrToolTipHideDelay:[{type:o.Input,args:["toolTipHideDelay"]}],attrToolTipMoveDuration:[{type:o.Input,args:["toolTipMoveDuration"]}],attrDrawBefore:[{type:o.Input,args:["drawBefore"]}],attrDraw:[{type:o.Input,args:["draw"]}],attrRtl:[{type:o.Input,args:["rtl"]}],attrEnableCrosshairs:[{type:o.Input,args:["enableCrosshairs"]}],attrCrosshairsColor:[{type:o.Input,args:["crosshairsColor"]}],attrCrosshairsDashStyle:[{type:o.Input,args:["crosshairsDashStyle"]}],attrCrosshairsLineWidth:[{type:o.Input,args:["crosshairsLineWidth"]}],attrColumnSeriesOverlap:[{type:o.Input,args:["columnSeriesOverlap"]}],attrEnabled:[{type:o.Input,args:["enabled"]}],attrEnableAnimations:[{type:o.Input,args:["enableAnimations"]}],attrAnimationDuration:[{type:o.Input,args:["animationDuration"]}],attrEnableAxisTextAnimation:[{type:o.Input,args:["enableAxisTextAnimation"]}],attrRenderEngine:[{type:o.Input,args:["renderEngine"]}],attrXAxis:[{type:o.Input,args:["xAxis"]}],attrValueAxis:[{type:o.Input,args:["valueAxis"]}],attrSeriesGroups:[{type:o.Input,args:["seriesGroups"]}],attrWidth:[{type:o.Input,args:["width"]}],attrHeight:[{type:o.Input,args:["height"]}],autoCreate:[{type:o.Input,args:["auto-create"]}],onToggle:[{type:o.Output}],onClick:[{type:o.Output}],onRefreshBegin:[{type:o.Output}],onRefreshEnd:[{type:o.Output}],onRangeSelectionChanging:[{type:o.Output}],onRangeSelectionChanged:[{type:o.Output}]},t}(),r=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{imports:[],declarations:[e],exports:[e]}]}],t}();t.jqxChartComponent=e,t.jqxChartModule=r,Object.defineProperty(t,"__esModule",{value:!0})});
