/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
export declare class jqxBarGaugeComponent implements OnChanges {
    attrAnimationDuration: number;
    attrBackgroundColor: string;
    attrBarSpacing: number;
    attrBaseValue: number;
    attrColorScheme: string;
    attrCustomColorScheme: jqwidgets.BarGaugeCustomColorScheme;
    attrDisabled: boolean;
    attrEndAngle: number;
    attrFormatFunction: any;
    attrLabels: jqwidgets.BarGaugeLabels;
    attrMax: number | string;
    attrMin: number;
    attrRelativeInnerRadius: number | string;
    attrRendered: () => void;
    attrStartAngle: number;
    attrTitle: jqwidgets.BarGaugeTitle;
    attrTooltip: jqwidgets.BarGaugeTooltip;
    attrUseGradient: boolean;
    attrValues: Array<number>;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxBarGauge;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    animationDuration(arg?: number): any;
    backgroundColor(arg?: string): any;
    barSpacing(arg?: number): any;
    baseValue(arg?: number): any;
    colorScheme(arg?: string): any;
    customColorScheme(arg?: jqwidgets.BarGaugeCustomColorScheme): any;
    disabled(arg?: boolean): any;
    endAngle(arg?: number): any;
    formatFunction(arg?: any): any;
    height(arg?: string | number): any;
    labels(arg?: jqwidgets.BarGaugeLabels): any;
    max(arg?: number | string): any;
    min(arg?: number): any;
    relativeInnerRadius(arg?: number | string): any;
    rendered(arg?: () => void): any;
    startAngle(arg?: number): any;
    title(arg?: jqwidgets.BarGaugeTitle): any;
    tooltip(arg?: jqwidgets.BarGaugeTooltip): any;
    useGradient(arg?: boolean): any;
    values(arg?: Array<number>): any;
    width(arg?: string | number): any;
    refresh(): void;
    render(): void;
    val(value?: Array<number>): any;
    onDrawEnd: EventEmitter<{}>;
    onDrawStart: EventEmitter<{}>;
    onInitialized: EventEmitter<{}>;
    onTooltipClose: EventEmitter<{}>;
    onTooltipOpen: EventEmitter<{}>;
    onValueChanged: EventEmitter<{}>;
    __wireEvents__(): void;
}
