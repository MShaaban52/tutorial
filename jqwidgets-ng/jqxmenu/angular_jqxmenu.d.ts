/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
export declare class jqxMenuComponent implements OnChanges {
    attrAnimationShowDuration: number;
    attrAnimationHideDuration: number;
    attrAnimationHideDelay: number;
    attrAnimationShowDelay: number;
    attrAutoCloseInterval: number;
    attrAutoSizeMainItems: boolean;
    attrAutoCloseOnClick: boolean;
    attrAutoOpenPopup: boolean;
    attrAutoOpen: boolean;
    attrAutoCloseOnMouseLeave: boolean;
    attrClickToOpen: boolean;
    attrDisabled: boolean;
    attrEnableHover: boolean;
    attrEasing: string;
    attrKeyboardNavigation: boolean;
    attrMinimizeWidth: number | string;
    attrMode: any;
    attrPopupZIndex: number | string;
    attrRtl: boolean;
    attrShowTopLevelArrows: boolean;
    attrSource: any;
    attrTheme: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxMenu;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    animationShowDuration(arg?: number): any;
    animationHideDuration(arg?: number): any;
    animationHideDelay(arg?: number): any;
    animationShowDelay(arg?: number): any;
    autoCloseInterval(arg?: number): any;
    autoSizeMainItems(arg?: boolean): any;
    autoCloseOnClick(arg?: boolean): any;
    autoOpenPopup(arg?: boolean): any;
    autoOpen(arg?: boolean): any;
    autoCloseOnMouseLeave(arg?: boolean): any;
    clickToOpen(arg?: boolean): any;
    disabled(arg?: boolean): any;
    enableHover(arg?: boolean): any;
    easing(arg?: string): any;
    height(arg?: string | number): any;
    keyboardNavigation(arg?: boolean): any;
    minimizeWidth(arg?: number | string): any;
    mode(arg?: string): any;
    popupZIndex(arg?: number | string): any;
    rtl(arg?: boolean): any;
    showTopLevelArrows(arg?: boolean): any;
    source(arg?: any): any;
    theme(arg?: string): any;
    width(arg?: string | number): any;
    closeItem(itemID: number | string): void;
    close(): void;
    disable(itemID: number | string, value: boolean): void;
    destroy(): void;
    focus(): void;
    minimize(): void;
    open(left: number, top: number): void;
    openItem(itemID: number | string): void;
    restore(): void;
    setItemOpenDirection(item: number | string, horizontaldirection: string, verticaldirection: string): void;
    onClosed: EventEmitter<{}>;
    onItemclick: EventEmitter<{}>;
    onShown: EventEmitter<{}>;
    __wireEvents__(): void;
}
