/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
export declare class jqxTreeMapComponent implements OnChanges {
    attrBaseColor: string;
    attrColorRanges: Array<jqwidgets.TreeMapColorRanges>;
    attrColorRange: number;
    attrColorMode: any;
    attrDisplayMember: string;
    attrHoverEnabled: boolean;
    attrHeaderHeight: number;
    attrLegendLabel: string;
    attrLegendPosition: jqwidgets.TreeMapLegendPosition;
    attrLegendScaleCallback: any;
    attrRenderCallbacks: any;
    attrSelectionEnabled: boolean;
    attrShowLegend: boolean;
    attrSource: any;
    attrTheme: string;
    attrValueMember: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxTreeMap;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    baseColor(arg?: string): any;
    colorRanges(arg?: Array<jqwidgets.TreeMapColorRanges>): any;
    colorRange(arg?: number): any;
    colorMode(arg?: string): any;
    displayMember(arg?: string): any;
    height(arg?: string | number): any;
    hoverEnabled(arg?: boolean): any;
    headerHeight(arg?: number): any;
    legendLabel(arg?: string): any;
    legendPosition(arg?: jqwidgets.TreeMapLegendPosition): any;
    legendScaleCallback(arg?: any): any;
    renderCallbacks(arg?: any): any;
    selectionEnabled(arg?: boolean): any;
    showLegend(arg?: boolean): any;
    source(arg?: any): any;
    theme(arg?: string): any;
    valueMember(arg?: string): any;
    width(arg?: string | number): any;
    destroy(): void;
    render(): void;
    onBindingComplete: EventEmitter<{}>;
    __wireEvents__(): void;
}
