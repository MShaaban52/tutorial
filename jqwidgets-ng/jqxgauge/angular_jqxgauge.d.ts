/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
export declare class jqxGaugeComponent implements OnChanges {
    attrAnimationDuration: string | number;
    attrBorder: jqwidgets.GaugeBorder;
    attrCaption: jqwidgets.GaugeCaption;
    attrCap: jqwidgets.GaugeCap;
    attrColorScheme: string;
    attrDisabled: boolean;
    attrEasing: any;
    attrEndAngle: number | string;
    attrInt64: boolean;
    attrLabels: jqwidgets.GaugeLabels;
    attrMin: number;
    attrMax: number | string;
    attrPointer: jqwidgets.GaugePointer;
    attrRadius: number | string;
    attrRanges: Array<jqwidgets.GaugeRanges>;
    attrStartAngle: number | string;
    attrShowRanges: boolean;
    attrStyles: jqwidgets.GaugeStyle;
    attrTicksMajor: jqwidgets.GaugeTicks;
    attrTicksMinor: jqwidgets.GaugeTicks;
    attrTicksDistance: string;
    attrValue: number;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxGauge;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    animationDuration(arg?: string | number): any;
    border(arg?: jqwidgets.GaugeBorder): any;
    caption(arg?: jqwidgets.GaugeCaption): any;
    cap(arg?: jqwidgets.GaugeCap): any;
    colorScheme(arg?: string): any;
    disabled(arg?: boolean): any;
    easing(arg?: string): any;
    endAngle(arg?: number | string): any;
    height(arg?: number | string): any;
    int64(arg?: boolean): any;
    labels(arg?: jqwidgets.GaugeLabels): any;
    min(arg?: number): any;
    max(arg?: number | string): any;
    pointer(arg?: jqwidgets.GaugePointer): any;
    radius(arg?: number | string): any;
    ranges(arg?: Array<jqwidgets.GaugeRanges>): any;
    startAngle(arg?: number | string): any;
    showRanges(arg?: boolean): any;
    styles(arg?: jqwidgets.GaugeStyle): any;
    ticksMajor(arg?: jqwidgets.GaugeTicks): any;
    ticksMinor(arg?: jqwidgets.GaugeTicks): any;
    ticksDistance(arg?: string): any;
    value(arg?: number): any;
    width(arg?: number | string): any;
    disable(): void;
    enable(): void;
    val(value?: number): any;
    onValueChanging: EventEmitter<{}>;
    onValueChanged: EventEmitter<{}>;
    __wireEvents__(): void;
}
