/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
export declare class jqxKanbanComponent implements OnChanges {
    attrColumnRenderer: (element?: any, collapsedElement?: any, column?: any) => void;
    attrColumns: Array<jqwidgets.KanbanColumns>;
    attrConnectWith: string;
    attrHeaderHeight: number | string;
    attrHeaderWidth: number;
    attrItemRenderer: (element?: Array<any>, item?: any, resource?: any) => void;
    attrReady: () => void;
    attrRtl: boolean;
    attrSource: any;
    attrResources: any;
    attrTemplate: string;
    attrTemplateContent: any;
    attrTheme: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxKanban;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    columnRenderer(arg?: (element?: any, collapsedElement?: any, column?: any) => void): any;
    columns(arg?: Array<jqwidgets.KanbanColumns>): any;
    connectWith(arg?: string): any;
    headerHeight(arg?: number | string): any;
    headerWidth(arg?: number): any;
    height(arg?: string | number): any;
    itemRenderer(arg?: (element?: Array<any>, item?: any, resource?: any) => void): any;
    ready(arg?: () => void): any;
    rtl(arg?: boolean): any;
    source(arg?: any): any;
    resources(arg?: any): any;
    template(arg?: string): any;
    templateContent(arg?: any): any;
    theme(arg?: string): any;
    width(arg?: string | number): any;
    addItem(newItem: any): void;
    destroy(): void;
    getColumn(dataField: string): jqwidgets.KanbanColumns;
    getColumnItems(dataField: string): Array<jqwidgets.KanbanSource>;
    getItems(): jqwidgets.KanbanSource;
    removeItem(itemId: string): void;
    updateItem(itemId: string, newContent: jqwidgets.KanbanUpdateItem): void;
    onColumnAttrClicked: EventEmitter<{}>;
    onColumnCollapsed: EventEmitter<{}>;
    onColumnExpanded: EventEmitter<{}>;
    onItemAttrClicked: EventEmitter<{}>;
    onItemMoved: EventEmitter<{}>;
    __wireEvents__(): void;
}
