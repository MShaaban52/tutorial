/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
export declare class jqxTagCloudComponent implements OnChanges {
    attrAlterTextCase: any;
    attrDisabled: boolean;
    attrDisplayLimit: number;
    attrDisplayMember: string;
    attrDisplayValue: boolean;
    attrFontSizeUnit: any;
    attrMaxColor: string;
    attrMaxFontSize: number;
    attrMaxValueToDisplay: number;
    attrMinColor: string;
    attrMinFontSize: number;
    attrMinValueToDisplay: number;
    attrRtl: boolean;
    attrSortBy: any;
    attrSortOrder: any;
    attrSource: jqwidgets.TagCloudSource;
    attrTagRenderer: (itemData: any, minValue: number, valueRange: number) => any;
    attrTakeTopWeightedItems: boolean;
    attrTextColor: string;
    attrUrlBase: string;
    attrUrlMember: string;
    attrValueMember: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxTagCloud;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    alterTextCase(arg?: string): any;
    disabled(arg?: boolean): any;
    displayLimit(arg?: number): any;
    displayMember(arg?: string): any;
    displayValue(arg?: boolean): any;
    fontSizeUnit(arg?: string): any;
    height(arg?: number | string): any;
    maxColor(arg?: string): any;
    maxFontSize(arg?: number): any;
    maxValueToDisplay(arg?: number): any;
    minColor(arg?: string): any;
    minFontSize(arg?: number): any;
    minValueToDisplay(arg?: number): any;
    rtl(arg?: boolean): any;
    sortBy(arg?: string): any;
    sortOrder(arg?: string): any;
    source(arg?: jqwidgets.TagCloudSource): any;
    tagRenderer(arg?: (itemData: any, minValue: number, valueRange: number) => any): any;
    takeTopWeightedItems(arg?: boolean): any;
    textColor(arg?: string): any;
    urlBase(arg?: string): any;
    urlMember(arg?: string): any;
    valueMember(arg?: string): any;
    width(arg?: string | number): any;
    destroy(): void;
    findTagIndex(tag: string): number;
    getHiddenTagsList(): Array<any>;
    getRenderedTags(): Array<any>;
    getTagsList(): Array<any>;
    hideItem(index: number): void;
    insertAt(index: number, item: any): void;
    removeAt(index: number): void;
    updateAt(index: number, item: any): void;
    showItem(index: number): void;
    onBindingComplete: EventEmitter<{}>;
    onItemClick: EventEmitter<{}>;
    __wireEvents__(): void;
}
