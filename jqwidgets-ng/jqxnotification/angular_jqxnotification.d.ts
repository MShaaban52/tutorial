/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
export declare class jqxNotificationComponent implements OnChanges {
    attrAppendContainer: string;
    attrAutoOpen: boolean;
    attrAnimationOpenDelay: number;
    attrAnimationCloseDelay: number;
    attrAutoClose: boolean;
    attrAutoCloseDelay: number | string;
    attrBlink: boolean;
    attrBrowserBoundsOffset: number;
    attrCloseOnClick: boolean;
    attrDisabled: boolean;
    attrHoverOpacity: number;
    attrIcon: jqwidgets.NotificationIcon;
    attrNotificationOffset: number;
    attrOpacity: number;
    attrPosition: any;
    attrRtl: boolean;
    attrShowCloseButton: boolean;
    attrTemplate: any;
    attrTheme: string;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxNotification;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    appendContainer(arg?: string): any;
    autoOpen(arg?: boolean): any;
    animationOpenDelay(arg?: number): any;
    animationCloseDelay(arg?: number): any;
    autoClose(arg?: boolean): any;
    autoCloseDelay(arg?: number | string): any;
    blink(arg?: boolean): any;
    browserBoundsOffset(arg?: number): any;
    closeOnClick(arg?: boolean): any;
    disabled(arg?: boolean): any;
    height(arg?: number | string): any;
    hoverOpacity(arg?: number): any;
    icon(arg?: jqwidgets.NotificationIcon): any;
    notificationOffset(arg?: number): any;
    opacity(arg?: number): any;
    position(arg?: string): any;
    rtl(arg?: boolean): any;
    showCloseButton(arg?: boolean): any;
    template(arg?: string): any;
    theme(arg?: string): any;
    width(arg?: string | number): any;
    closeAll(): void;
    closeLast(): void;
    destroy(): void;
    open(): void;
    refresh(): void;
    render(): void;
    onClose: EventEmitter<{}>;
    onClick: EventEmitter<{}>;
    onOpen: EventEmitter<{}>;
    __wireEvents__(): void;
}
